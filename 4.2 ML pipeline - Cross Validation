{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOObFGr5s+TYKfUIpb8fXer"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import accuracy_score\n","import numpy as np"],"metadata":{"id":"vShnJHWKcLj3"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"s6B_ZAptbjus"},"outputs":[],"source":["link = \"https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv\""]},{"cell_type":"code","source":["df_titanic = pd.read_csv(link)"],"metadata":{"id":"dEwH6EaYchB5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_titanic.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"apVBHFL7cl5R","executionInfo":{"status":"ok","timestamp":1700646783148,"user_tz":-60,"elapsed":12,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"3bf227fb-0ca3-4947-cd49-d2d53603555b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 887 entries, 0 to 886\n","Data columns (total 8 columns):\n"," #   Column                   Non-Null Count  Dtype  \n","---  ------                   --------------  -----  \n"," 0   Survived                 887 non-null    int64  \n"," 1   Pclass                   887 non-null    int64  \n"," 2   Name                     887 non-null    object \n"," 3   Sex                      887 non-null    object \n"," 4   Age                      887 non-null    float64\n"," 5   Siblings/Spouses Aboard  887 non-null    int64  \n"," 6   Parents/Children Aboard  887 non-null    int64  \n"," 7   Fare                     887 non-null    float64\n","dtypes: float64(2), int64(4), object(2)\n","memory usage: 55.6+ KB\n"]}]},{"cell_type":"code","source":["df_titanic['Sex'] = df_titanic['Sex'].apply(lambda x: 0 if x == 'female' else 1)"],"metadata":{"id":"EWA7UQp7c9Aw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#df_titanic['Sex'] = df_titanic['Sex'].factorize()[0]"],"metadata":{"id":"hhuo7tqFd3j3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_titanic.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":142},"id":"duCCI5lyeeOv","executionInfo":{"status":"ok","timestamp":1700647277297,"user_tz":-60,"elapsed":180,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"2b321df1-cac7-44d7-8c6c-3509a6d60c10"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Survived  Pclass                                               Name  Sex  \\\n","0         0       3                             Mr. Owen Harris Braund    1   \n","1         1       1  Mrs. John Bradley (Florence Briggs Thayer) Cum...    0   \n","2         1       3                              Miss. Laina Heikkinen    0   \n","\n","    Age  Siblings/Spouses Aboard  Parents/Children Aboard     Fare  \n","0  22.0                        1                        0   7.2500  \n","1  38.0                        1                        0  71.2833  \n","2  26.0                        0                        0   7.9250  "],"text/html":["\n","  <div id=\"df-df466e4b-84b0-43bd-86f4-64b23906716d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Siblings/Spouses Aboard</th>\n","      <th>Parents/Children Aboard</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Mr. Owen Harris Braund</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Mrs. John Bradley (Florence Briggs Thayer) Cum...</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Miss. Laina Heikkinen</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df466e4b-84b0-43bd-86f4-64b23906716d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-df466e4b-84b0-43bd-86f4-64b23906716d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-df466e4b-84b0-43bd-86f4-64b23906716d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bacd32d2-3e37-4f1f-a564-087673607849\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bacd32d2-3e37-4f1f-a564-087673607849')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bacd32d2-3e37-4f1f-a564-087673607849 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["X = df_titanic.drop(columns = ['Name', 'Survived'])\n","y = df_titanic['Survived']"],"metadata":{"id":"9k0qeD8MejTU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","from sklearn.tree import DecisionTreeClassifier\n","\n","from sklearn.metrics import accuracy_score\n","\n","from sklearn.model_selection import train_test_split"],"metadata":{"id":"WL4LZFo-fA86"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.8)"],"metadata":{"id":"sAqlc9TffKMP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_logistic_regression = LogisticRegression()"],"metadata":{"id":"6T7c9C-nfZ1v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Entrainement du model\n","model_logistic_regression.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"zhtuyvNnf-PG","executionInfo":{"status":"ok","timestamp":1700647724210,"user_tz":-60,"elapsed":187,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"3fac4b1a-427c-437c-af1c-9b445f62f484"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Prédiction du modèle\n","\n","y_pred_train = model_logistic_regression.predict(X_train)\n","y_pred_test = model_logistic_regression.predict(X_test)"],"metadata":{"id":"Bi8rLV_agPrt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"Train set : {accuracy_score(y_train, y_pred_train)} / Test set : {accuracy_score(y_test, y_pred_test)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zGD4ezIqg3Fa","executionInfo":{"status":"ok","timestamp":1700648046830,"user_tz":-60,"elapsed":13,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"286fbc3c-7025-4841-f610-0a39852b2825"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train set : 0.8138222849083215 / Test set : 0.7640449438202247\n"]}]},{"cell_type":"code","source":["for loop in range(10):\n","\n","  #Entrainement du modèle prédiction\n","  X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.8)\n","  model_logistic_regression.fit(X_train, y_train)\n","  # Prédiction du modèle\n","\n","  y_pred_train = model_logistic_regression.predict(X_train)\n","  y_pred_test = model_logistic_regression.predict(X_test)\n","\n","  #Affichage prédiction\n","  print(f\"Train set : {accuracy_score(y_train, y_pred_train)} / Test set : {accuracy_score(y_test, y_pred_test)}\")\n"],"metadata":{"id":"LHKt2D9ShlJ_","executionInfo":{"status":"ok","timestamp":1700670421503,"user_tz":-60,"elapsed":327,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["model_DTC = DecisionTreeClassifier()\n","for loop in range(10):\n","\n","  #Entrainement du modèle prédiction\n","  X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.8)\n","  modele_DTC.fit(X_train, y_train)\n","  # Prédiction du modèle\n","\n","  y_pred_train = modele_DTC.predict(X_train)\n","  y_pred_test = modele_DTC.predict(X_test)\n","\n","  #Affichage prédiction\n","  print(f\"Train set : {accuracy_score(y_train, y_pred_train)} / Test set : {accuracy_score(y_test, y_pred_test)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZAcTP7qXjIiF","executionInfo":{"status":"ok","timestamp":1700648984265,"user_tz":-60,"elapsed":299,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"7dd45921-f27e-430d-ef0a-943e975a4bfa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train set : 0.9858956276445698 / Test set : 0.7921348314606742\n","Train set : 0.9830747531734838 / Test set : 0.8089887640449438\n","Train set : 0.9844851904090268 / Test set : 0.7640449438202247\n","Train set : 0.9844851904090268 / Test set : 0.797752808988764\n","Train set : 0.9816643159379408 / Test set : 0.7584269662921348\n","Train set : 0.9887165021156559 / Test set : 0.7808988764044944\n","Train set : 0.9887165021156559 / Test set : 0.8089887640449438\n","Train set : 0.9844851904090268 / Test set : 0.8033707865168539\n","Train set : 0.9830747531734838 / Test set : 0.7415730337078652\n","Train set : 0.9887165021156559 / Test set : 0.7640449438202247\n"]}]},{"cell_type":"code","source":["# Cross validation\n","\n","from sklearn.model_selection import cross_val_score\n","from sklearn.metrics import make_scorer\n","\n","score = cross_val_score(model_DTC,\n","                        X, y,\n","                        cv = 6,\n","                        scoring = make_scorer(accuracy_score)\n","                        )\n","score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zqSraA32j9mp","executionInfo":{"status":"ok","timestamp":1700649044474,"user_tz":-60,"elapsed":302,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"e0a82efe-1565-41b1-e60f-39408b52f9f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.69594595, 0.7972973 , 0.7972973 , 0.79054054, 0.79054054,\n","       0.82993197])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["print(f'moyenne Cross Validation : {score.mean()} - Ecart type: +/- {score.std(): 3f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JZpfvKsmmYWS","executionInfo":{"status":"ok","timestamp":1700649503197,"user_tz":-60,"elapsed":11,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"7e295ea8-3cbb-4ae9-dc73-5aeeed753156"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["moyenne Cross Validation : 0.7835922657351228 - Ecart type: +/-  0.041436\n"]}]}]}