{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1TZdvcMR3hoyZKADCbIfB5eoVn0wgFdFK","timestamp":1697195178357},{"file_id":"1m8svVrBEAF6yEg-NZRZW5OGJYoqEdM3v","timestamp":1697179850519}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"TYrzh-8uK9ib"},"source":["C'est ton premier checkpoint.\n","Les 5 exercices sont indépendants. Tu peux donc les effectuer dans l'ordre que tu préfères.\n","\n","Essaye de finir ce checkpoint en 3h30. Si tu n'as pas tout fini, ce n'est pas grave. Tu pourras le reprendre plus tard, tu indiqueras simplement en commentaire ce que tu as fait a posteriori.\n","Nous t'avons indiqué des durées estimatives. Evidemment chacun a ses forces et ses faiblesses, avance donc à ton rythme. Cependant, si tu vois que tu dépasses une durée, ne reste pas bloqué, passe à l'exercice suivant. Tu pourras revenir à la fin sur ce que tu n'as pas fini."]},{"cell_type":"markdown","metadata":{"id":"815_otfHPX5a"},"source":["#SQL - 45 min"]},{"cell_type":"markdown","metadata":{"id":"b2l_0IGPQgpp"},"source":["A partir de la base de données client ci-dessous, crée une **requête SQL** qui fournit :\n","\n","1.   les noms de chaque catégorie,\n","2.   le chiffre d'affaire associé à cette catégorie,\n","3.   et le prix moyen pondéré des produits vendus pour cette catégorie.\n","\n","Le prix moyen sera arrondi à 2 décimales.\n","\n","Ce tableau devra être trié pour avoir les catégories avec le chiffre d'affaire le plus élevé en premier.\n","\n","\n","*** Voici le schéma de la base ***\n","*********************\n","\n","![](https://github.com/murpi/wilddata/blob/master/quests/orders_schema.png?raw=true)\n","\n","\n","\n","\n","*** Voici les premières lignes attendues ***\n","*********************\n","\n","Categories | Chiffre_d_affaire | Prix_moyen\n","- |:-: | -:\n","Beverages | 99464.50 | 43.45\n","Dairy Products | 69921.00 | 26.88\n","... | ... | ...\n"]},{"cell_type":"code","source":["# Exécute le code ci-dessous sans rien modifier\n","import requests\n","import sqlite3\n","import pandas as pd\n","r = requests.get('https://github.com/WildCodeSchool/wilddata/blob/main/orders.db?raw=true')\n","open('orders.db', 'wb').write(r.content)\n","conn = sqlite3.connect('orders.db')\n","def SQL(script):\n","    global conn\n","    return pd.read_sql(script, conn)\n"],"metadata":{"id":"PXa7vPx-6xw8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":140},"id":"zCQT2Xti4_vu","executionInfo":{"status":"error","timestamp":1697181354017,"user_tz":-120,"elapsed":179,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"51bdc2a0-f28b-4154-f97b-fa9111c1233f"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-5-0933b0771765>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    select *\u001b[0m\n\u001b[0m              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","metadata":{"id":"HMJ538LwOqWK","executionInfo":{"status":"error","timestamp":1697185287539,"user_tz":-120,"elapsed":422,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"dc4f334e-cd08-49de-b222-1163427dddcf","colab":{"base_uri":"https://localhost:8080/","height":623}},"source":["# Modifie la requête SQL dans cette variable\n","script_sql = \"\"\"\n","-- Ici tu peux écrire ton code SQL\n","SELECT *\n","FROM categories\n","WHERE CategoryName IN\n","(SELECT ProductID, CategoriesID\n","FROM product\n","INNER JOIN products ON ProductID.order_details = OrderID\n",")\n","\n","\n","\n","\n","-- Ne modifie rien ci-dessous pour obtenir le résultat de la requête\n","\"\"\"\n","\n","\n","SQL(script_sql)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"DatabaseError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mOperationalError\u001b[0m                          Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2017\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2018\u001b[0;31m             \u001b[0mcur\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2019\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mcur\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mOperationalError\u001b[0m: no such table: product","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mDatabaseError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m<ipython-input-50-45966454a897>\u001b[0m in \u001b[0;36m<cell line: 16>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m \u001b[0mSQL\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscript_sql\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-45-b2617fe25309>\u001b[0m in \u001b[0;36mSQL\u001b[0;34m(script)\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mSQL\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscript\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m     \u001b[0;32mglobal\u001b[0m \u001b[0mconn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_sql\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscript\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mread_sql\u001b[0;34m(sql, con, index_col, coerce_float, params, parse_dates, columns, chunksize)\u001b[0m\n\u001b[1;32m    562\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    563\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpandas_sql\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSQLiteDatabase\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 564\u001b[0;31m         return pandas_sql.read_query(\n\u001b[0m\u001b[1;32m    565\u001b[0m             \u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    566\u001b[0m             \u001b[0mindex_col\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex_col\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mread_query\u001b[0;34m(self, sql, index_col, coerce_float, params, parse_dates, chunksize, dtype)\u001b[0m\n\u001b[1;32m   2076\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2077\u001b[0m         \u001b[0margs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_convert_params\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2078\u001b[0;31m         \u001b[0mcursor\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2079\u001b[0m         \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mcol_desc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcol_desc\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcursor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdescription\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2080\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/sql.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2029\u001b[0m             \u001b[0mex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDatabaseError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Execution failed on sql '{args[0]}': {exc}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2030\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mex\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mexc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2031\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2032\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mDatabaseError\u001b[0m: Execution failed on sql '\n-- Ici tu peux écrire ton code SQL\nSELECT *\nFROM categories \nWHERE CategoryName IN \n(SELECT ProductID, CategoriesID\nFROM product\nINNER JOIN products ON ProductID.order_details = OrderID\n)\n\n-- Ne modifie rien ci-dessous pour obtenir le résultat de la requête\n': no such table: product"]}]},{"cell_type":"code","source":[],"metadata":{"id":"t4tu8HMN2iFW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Modifie la requête SQL dans cette variable\n","script_sql = \"\"\"\n","-- Ici tu peux écrire ton code SQL\n","SELECT customers.CustomerID, COUNT(OrderID)\n","FROM customers\n","LEFT JOIN orders on customers.CustomerID = orders.CustomerID\n","group by customers.CustomerID\n","\n","-- Ne modifie rien ci-dessous pour obtenir le résultat de la requête\n","\"\"\"\n","SQL(script_sql)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"YOXkkSYvzTTe","executionInfo":{"status":"ok","timestamp":1696577937721,"user_tz":-120,"elapsed":231,"user":{"displayName":"Nicolas GIERKOWSKI","userId":"03119342301955971102"}},"outputId":"48d6821c-30f1-46fa-daa7-0052fb0b789e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    CustomerID  COUNT(OrderID)\n","0            1               0\n","1            2               1\n","2            3               1\n","3            4               2\n","4            5               3\n","..         ...             ...\n","86          87               7\n","87          88               2\n","88          89               2\n","89          90               1\n","90          91               1\n","\n","[91 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-7eb61962-f0e8-4076-8fcc-af7471d1d64b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>COUNT(OrderID)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>87</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>88</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>89</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>90</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>91</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>91 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7eb61962-f0e8-4076-8fcc-af7471d1d64b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7eb61962-f0e8-4076-8fcc-af7471d1d64b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7eb61962-f0e8-4076-8fcc-af7471d1d64b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f1f9c2de-f6e6-4a8f-a6b6-eb391d5dac51\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f1f9c2de-f6e6-4a8f-a6b6-eb391d5dac51')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f1f9c2de-f6e6-4a8f-a6b6-eb391d5dac51 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"JnOBqXLAHJju"},"source":["# Tableur ou Business Intelligence - 45 min"]},{"cell_type":"markdown","metadata":{"id":"i-astmsSHLGn"},"source":["Le responsable du reporting mensuel est absent, et il faut absolument envoyer le reporting de chiffre d'affaire (quantité * prix de chaque produit) aujourd'hui... mais impossible de remettre la main sur le fichier du mois dernier !\n","\n","Heureusement, tu as trouvé comment extraire les données, [tu les trouveras ici.](https://docs.google.com/spreadsheets/d/1T7zh6Swn4Yj8Feu-xcp-B7xeOQfBoBSWn7sRjx07GvI/edit?usp=sharing)\n","\n","Tu vas maintenant devoir recréer un graphique qui ressemblera au maximum à celui-ci, mais **en incluant les données du dernier mois**. Tu en profiteras pour ajouter **l'affichage des mois sous les colonnes**. Tu essaieras au maximum d'utiliser les tableaux croisés dynamiques pour faire cela.\n","**Tu peux utiliser l'outil de ton choix (GSheets, MS Excel, MS Power BI ou Tableau).**\n","\n","Tu incluras l'image du graphique dans ce notebook, et tu indiqueras également le lien de ton google spreadsheet (ou MS Excel online) que tu auras pris soin de partager.\n","\n","**Ne t'embête pas à avoir exactement les mêmes couleurs** que sur l'exemple, notamment si tu as utilisé un autre outil, ce sont les valeurs et la lisibilité qui sont importantes.\n","\n","![Tableur checkpoint](https://github.com/murpi/wilddata/raw/master/checkpoint1_withoutdate.png)"]},{"cell_type":"code","source":[],"metadata":{"id":"ZD1IwyGiKwCO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Python : Algo 1 Météo - 30 min\n","\n","Tu veux créer un script qui te dit comment t'habiller en fonction de la météo du jour :\n"],"metadata":{"id":"A8ee8Jvy-pcL"}},{"cell_type":"markdown","source":["## 1.1 Température\n","* S'il fait strictement plus de 19 degrés,  le script doit afficher \"Prends un t-shirt\"\n","* S'il fait entre 12 et 19 degrés inclus, le script doit afficher \"Prends un pull\"\n","* S'il fait strictement moins de 12 degrés, le script doit afficher \"Prends un manteau\"\n","\n","La variable température contiendra un nombre entier (nous avons mis `14` par défaut, n'hésite pas à modifier cette valeur pour tester)"],"metadata":{"id":"VQLNdU9xG059"}},{"cell_type":"code","source":["temperature = 14\n","temp_1 = 19\n","temp_2 = 12\n","\n","if temperature > temp_1:\n","  print(\"prends un t-shirt\")\n","elif temperature > temp_2 and temperature < temp_1:\n","  print(\"prend un pull\")\n","else:\n","  print(\"prends un manteau\")\n","\n","\n","\n","\n"],"metadata":{"id":"SV3jcaE5-srQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182140284,"user_tz":-120,"elapsed":249,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"bd434e66-94bb-439e-8bb7-ae83e3b08346"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["prend un pull\n"]}]},{"cell_type":"markdown","source":["## 1.2 Pluie\n","\n","Tu va recopier ton script de la question précédente (1.1) et le modifier pour intégrer la contrainte suivante :\n","* Si la variable `pluie` vaut \"YES\", alors le script affiche \"Prends un manteau\", quelle que soit la température."],"metadata":{"id":"KSt8QDbJHAqm"}},{"cell_type":"code","source":["temperature = 14\n","pluie = \"YES\"\n","temp_1 = 19\n","temp_2 = 12\n","\n","\n","# Tu écriras ton script ici :\n","\n","\n","if pluie == \"YES\" or temperature > temp_1:\n","  print(\"prend un manteau\")\n","elif temperature > temp_2 and temperature < temp_1 and pluie == 1:\n","  print(\"prend un pull\")\n","else:\n","  print(\"prends un manteau\")\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"-7V4KUCxFT3j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697185756855,"user_tz":-120,"elapsed":651,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"6c19be5c-14d6-4a1d-81f8-4fe29db809bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["prend un manteau\n"]}]},{"cell_type":"markdown","source":["## 1.3 Opérateurs logiques (optionnel)\n","\n","Essaye d'écrire le script précédent (1.2) en utilisant au maximum une seule fois la commande `if` et au maximum une seule fois la commande `elif`."],"metadata":{"id":"l_f-r5WFH_Xl"}},{"cell_type":"code","source":["# Tu écriras ton script ici :\n","if pluie == \"YES\" or temperature > temp_1:\n","  print(\"prend un manteau\")\n","elif temperature > temp_2 and temperature < temp_1 and pluie == 1:\n","  print(\"prend un pull\")\n","else:\n","  print(\"prends un manteau\")\n"],"metadata":{"id":"ztf9BPu1Ibod","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697185778334,"user_tz":-120,"elapsed":248,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"f6ed1059-ce00-43f5-befd-50c57b1745e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["prend un manteau\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"4rzUgOsruzo6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3k1iqC3wffyB"},"source":["# Python : Algo 2 - 30 min\n","\n","Un magasin importe des produits américains et les revend sur le marché européen. Il propose à ses clients un discount pour les produits les plus chers (10% de réduction à partir de 500 euros d'achat, 15% à partir de 1000 euros, et 20% à partir de 2000 euros).\n","\n","Le magasin a une liste de prix en dollars et fait appel à tes services pour déterminer pour chaque prix, le montant que paiera le client en euros (après application de la remise).\n"]},{"cell_type":"markdown","metadata":{"id":"YWW9llTJhEMT"},"source":["## Python 2.1 dollar_to_euro\n","Crée une fonction `dollar_to_euro` qui prend en paramètre un nombre décimal et retourne le montant converti en euro (dans le sens dollar vers euro, prends le taux en vigueur le jour du checkpoint)."]},{"cell_type":"code","metadata":{"id":"dQeMAFaahD81","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697189823653,"user_tz":-120,"elapsed":3044,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"b73266fe-73e8-4583-849e-2daadcbb901e"},"source":["def dollar_to_euro(dollars):\n","  euro = 0.95\n","  convertion = dollars * euro\n","  return convertion\n","\n","montant_dollars = int(input(\"ecris le montant que tu souhaites convertir en euros\"))\n","resultat = dollar_to_euro(montant_dollars)\n","print(resultat)\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ecris le montant que tu souhaites convertir en euros300\n","285.0\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"Ze8dpgVFKtbv"}},{"cell_type":"markdown","metadata":{"id":"GP0WRUWskAxN"},"source":["## Python 2.2 discount\n","Crée une fonction `discount` qui prend en paramètre un nombre décimal et retourne le pourcentage de réduction :\n","- 0.10 si l'argument est supérieur à 500\n","- 0.15 si l'argument est supérieur à 1000\n","- 0.20 si l'argument est supérieur à 2000"]},{"cell_type":"code","metadata":{"id":"54K2IrDrj_p-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697190522587,"user_tz":-120,"elapsed":5955,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"942d7b27-f476-4bf4-e116-2c3a238120df"},"source":["\n","def discount(achat):\n","    if achat > 2000:\n","        return 0.20\n","    elif achat > 1000:\n","        return 0.15\n","    elif achat > 500:\n","        return 0.10\n","    else:\n","        return 0.0\n","\n","achat = float(input(\"Pour combien souhaitez-vous acheter ? \"))\n","pourcentage_de_reduction = discount(achat)\n","reduction = achat * pourcentage_de_reduction\n","\n","print(f\"Vous avez obtenu une réduction de {pourcentage_de_reduction * 100}% pour votre achat.\")\n","print(f\"Montant de la réduction : {reduction} euros\")\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Pour combien souhaitez-vous acheter ? 10000\n","Vous avez obtenu une réduction de 20.0% pour votre achat.\n","Montant de la réduction : 2000.0 euros\n"]}]},{"cell_type":"markdown","metadata":{"id":"2UDkCCsOkkfI"},"source":["## Python 2.3 Utilisation\n","Utilise tes deux fonctions pour **afficher une phrase** pour chacun des montants de cette liste de prix en dollars, indiquant le montant à payer en euros.\n","Tu dois donc appliquer d'abord la fonction de conversion pour obtenir des euros, puis la fonction de discount, puis afficher une phrase à partir du résultat."]},{"cell_type":"code","metadata":{"id":"zJwtL9H_kxXR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697194595575,"user_tz":-120,"elapsed":314,"user":{"displayName":"Maxwell PERRIN","userId":"10169933277656860139"}},"outputId":"1e9b1741-ede1-43c7-e738-2979aa2b2cf1"},"source":["#def price(dollars, achat):\n","  #euro = 0.95\n","  #convertion = dollars * euro\n","  #return convertion\n","\n","  #if achat > 2000:\n","    #return 0.20\n","  #elif achat > 1000:\n","    #return 0.15\n","  #elif achat > 500:\n","   # return 0.10\n","  #else:\n","    #return 0.0\n","\n","\n","\n","price_list = [256, 1458, 2387, 669, 508, 1365]\n","\n","euro = 0.95\n","\n","for number in price_list:\n","    montant_dollars = number\n","    convertion = montant_dollars * euro\n","    if convertion > 2000:\n","        reduction = convertion * 0.20\n","        print(f\"Réduction de 20% : {reduction}\")\n","    elif convertion > 1000:\n","        reduction = convertion * 0.15\n","        print(f\"Réduction de 15% : {reduction}\")\n","    elif convertion > 500:\n","        reduction = convertion * 0.10\n","        print(f\"Réduction de 10% : {reduction}\")\n","    else:\n","        print(f\"Aucune réduction : {convertion}\")\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Aucune réduction : 243.2\n","Réduction de 15% : 207.765\n","Réduction de 20% : 453.53000000000003\n","Réduction de 10% : 63.555\n","Aucune réduction : 482.59999999999997\n","Réduction de 15% : 194.5125\n"]}]},{"cell_type":"markdown","metadata":{"id":"To2TYJGuPwc-"},"source":["# Python : Algo 3 - 1h"]},{"cell_type":"markdown","metadata":{"id":"B0XiM5wcQbY8"},"source":["Ecris une fonction *monnaie_a_rendre()* qui prend deux arguments obligatoires :\n","- montant de l'achat : float, supérieur à 0\n","- monnaie du client : integer, supérieur à 0\n","\n","La fonction devra afficher la monnaie à rendre au client en un minimum de billets/pièces.\n","\n","Attention, si la monnaie du client est insuffisante (inférieure à l'achat), il faudra l'indiquer.\n","\n","Exemple :\n","\n","\n","```\n","monnaie_a_rendre(26.57 , 40)\n",">>> Nb billets 10 euros : 1\n",">>> Nb pièces 2 euros : 1\n",">>> Nb pièces 1 euro : 1\n",">>> Nb pièces 20 cents : 2\n",">>> Nb pièces 2 cents : 1\n",">>> Nb pièces 1 cent : 1\n","```\n","\n"]},{"cell_type":"code","metadata":{"id":"6alG3GNPPv5U"},"source":["# Ta fonction ici :\n","def monnaie_a_rendre(achat, monnaie):\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"p2PCEpAxI20Q"},"source":["# Pour tester :\n","monnaie_a_rendre(26.57 , 40)"],"execution_count":null,"outputs":[]}]}